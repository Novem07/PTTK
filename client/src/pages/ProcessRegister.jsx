import React, { useEffect, useState } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import './ProcessRegister.css';
import LogoutModal from '../components/LogoutModal';

const ProcessRegister = () => {
  const { maPDK } = useParams();
  const navigate = useNavigate();

  const [loading, setLoading] = useState(true);
  const [phieu, setPhieu] = useState(null);
  const [khachHang, setKhachHang] = useState(null);
  const [daThanhToan, setDaThanhToan] = useState(false);
  const [maThanhToan, setMaThanhToan] = useState('');

  const user = JSON.parse(localStorage.getItem('user'));
  const tenNhanVien = user.name || 'Ch∆∞a ƒëƒÉng nh·∫≠p';
  const [showLogoutModal, setShowLogoutModal] = useState(false);

  const [phuongThuc, setPhuongThuc] = useState('Ti·ªÅn m·∫∑t');
  const [ngayLap, setNgayLap] = useState('');



  useEffect(() => {
    fetch(`http://localhost:5000/api/payments/phieu/${maPDK}`)
      .then(res => res.json())
      .then(data => {
        setPhieu(data);
        setMaThanhToan(data.MaTT || '');
        const isDonVi = data.DonVi && data.DonVi.trim().toLowerCase() !== 'kh√¥ng';
        setKhachHang({
          HoTen: data.HoTen,
          SDT: data.SDT,
          DonVi: isDonVi ? 'C√≥' : 'Kh√¥ng',
          LaDonVi: isDonVi,
        });
        setLoading(false);
        setPhuongThuc(data.PhuongThucThanhToan || 'Ti·ªÅn m·∫∑t');
        const today = new Date();
        const formattedDate = today.toLocaleDateString('vi-VN'); // ra ƒë·ªãnh d·∫°ng dd/mm/yyyy
        setNgayLap(formattedDate);

        const tongTruocTroGia = (data.TongTien || 0) + (data.TroGia || 0);
        setPhieu({ ...data, TongTruocTroGia: tongTruocTroGia });

      })
      .catch(err => {
        console.error('‚ùå L·ªói khi truy v·∫•n phi·∫øu:', err);
        setLoading(false);
      });
  }, [maPDK]);

    fetch(`http://localhost:5000/api/payments/tinhtoan/${maPDK}`)
    .then(res => res.json())
    .then(data => {
        setPhieu(prev => ({
        ...prev,
        TongTruocTroGia: data.Tong,
        TroGia: data.TroGia,
        TongTien: data.TongTien
        }));
    })
    .catch(err => console.error('‚ùå L·ªói khi t√≠nh h√≥a ƒë∆°n:', err));

  const handleHuyPhieu = () => {
    navigate('/ketoan');
  };

  const handleTiepTuc = () => {
    if (khachHang.LaDonVi && !daThanhToan) {
      // L∆∞u c·ªù ƒë√£ x·ª≠ l√Ω v√†o localStorage
      localStorage.setItem(`processed_${maPDK}`, true);
      alert('‚úÖ Phi·∫øu ƒë√£ ƒë∆∞·ª£c x·ª≠ l√Ω (ch∆∞a thanh to√°n).');
      navigate('/ketoan');
    } else if (daThanhToan) {
      // x·ª≠ l√Ω thanh to√°n b√¨nh th∆∞·ªùng (n·∫øu c√≥)
      alert('‚úÖ ƒê√£ x√°c nh·∫≠n thanh to√°n!');
      navigate('/ketoan');
    }
  };  

  const handleLogoutConfirm = () => {
    localStorage.removeItem('user');
    window.location.href = '/login';
  };

  if (loading || !phieu || !khachHang) return <div>ƒêang t·∫£i d·ªØ li·ªáu...</div>;

  return (
    <div className="page-wrapper">
      <nav className="navbar">
        <div className="logo">ACCI</div>
        <div className="nav-links">
          <span className="disabled">ƒêƒÉng k√Ω thi</span>
          <span className="active">Thanh to√°n</span>
          <span className="disabled">Gia h·∫°n thi</span>
          <span className="disabled">Tra c·ª©u</span>
        </div>
        <div className="nav-search-user">
          <input type="text" placeholder="T√¨m ki·∫øm" />
          <span className="user-icon">üë§ {tenNhanVien}</span>
          <span className="logout-icon" onClick={() => setShowLogoutModal(true)}>‚Ü©</span>
        </div>
      </nav>

      <div className="invoice-wrapper">
        <div className="invoice">
          <h1>ACCI</h1>
          <h2>H√≥a ƒê∆°n ƒêƒÉng K√Ω</h2>
          <p><span>M√£ h√≥a ƒë∆°n:</span><span>HƒêƒêK{phieu.MaPDK.slice(-3)}</span></p>
          <p><span>M√£ phi·∫øu ƒëƒÉng k√Ω:</span><span>{phieu.MaPDK}</span></p>
          <p><span>H·ªç t√™n kh√°ch h√†ng:</span><span>{khachHang.HoTen}</span></p>
          <p><span>S·ªë ƒëi·ªán tho·∫°i kh√°ch h√†ng:</span><span>{khachHang.SDT}</span></p>
          <p><span>ƒê∆°n v·ªã:</span><span>{khachHang.LaDonVi ? 'C√≥' : 'Kh√¥ng'}</span></p>
          <p><span>T·ªïng:</span><span>{phieu.TongTruocTroGia?.toLocaleString()} VND</span></p>
          <p><span>Tr·ª£ gi√°:</span><span>{phieu.TroGia?.toLocaleString()} VND</span></p>
          <hr />
          <p><span>T·ªïng ti·ªÅn:</span><span>{phieu.TongTien?.toLocaleString()} VND</span></p>
          <p>
            <span>Ph∆∞∆°ng th·ª©c thanh to√°n:</span>
            <span>
                <select value={phuongThuc} onChange={(e) => setPhuongThuc(e.target.value)}>
                <option value="Ti·ªÅn m·∫∑t">Ti·ªÅn m·∫∑t</option>
                <option value="MOMO">MOMO</option>
                </select>
            </span>
            </p>
            <p><span>Ng√†y l·∫≠p h√≥a ƒë∆°n:</span><span>{ngayLap}</span></p>
          <p><span>Ng∆∞·ªùi t·∫°o:</span><span>{tenNhanVien}</span></p>
          <label className="input-label">
            M√£ thanh to√°n:
            <input
              type="text"
              value={maThanhToan}
              onChange={(e) => setMaThanhToan(e.target.value)}
              placeholder="Nh·∫≠p m√£"
            />
          </label>
        </div>
      </div>

      <div className="payment-actions">
        <label>
          <input
            type="checkbox"
            checked={daThanhToan}
            onChange={() => setDaThanhToan(!daThanhToan)}
          />
          {' '}ƒê√£ thanh to√°n
        </label>

        <div className="button-group">
          <button className="btn cancel" onClick={handleHuyPhieu}>
            H·ªßy phi·∫øu
          </button>
          {(khachHang.LaDonVi || daThanhToan) && (
            <button className="btn confirm" onClick={handleTiepTuc}>
              Ti·∫øp t·ª•c
            </button>
          )}
        </div>
      </div>

      {showLogoutModal && (
        <LogoutModal
          onConfirm={handleLogoutConfirm}
          onCancel={() => setShowLogoutModal(false)}
        />
      )}
    </div>
  );
};

export default ProcessRegister;
